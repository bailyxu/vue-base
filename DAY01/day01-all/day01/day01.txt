一、框架
 library:
	jQuery bootStrap
 framework:
	一套可被反复使用的 代码编写规范，用来解决或者处理复杂的问题
 好处？
	解决兼容性问题、提高开发速度、提高代码质量、降低模块之间的耦合度
	
	ui:user interface 用户界面
	gui:graphical user interface 图形化用户界面
	cli: commnad line interface 命令行窗口

二、Vue概述
 1、what
	VueJS是一个构建用户界面(ui)渐进式的js框架

	用户界面：通过组件来构造ui

	渐进式：Vue官方给提供了很多的模块，可以单独使用Vue核心库来做一些处理，也可以结合着官方所提供的模块来做大型的商业项目，Vue都是可以胜任的。
 2、why
	①方便阅读的中文文档
	②容易上手 (门槛低，学习曲线比较缓和)
	③速度快，体积小
	④基于组件化的开发方式
	⑤提高了代码的可读性、可维护性
 3、where
	饿了么 滴滴 阿里巴巴
	数据操作比较频繁的场景
 4、how
	搭建开发环境的方式1：
		直观的引入对应的js

	搭建开发环境的方式2：
		命令行:
		# 全局安装 vue-cli
		npm install --global vue-cli
		# 创建一个基于 webpack 模板的新项目
		vue init webpack my-project
		# 安装依赖，走你
		cd my-project
		npm run dev

三、基本用法
 js/jQuery --》 DOM操作
 Vue/Angular/React --》 数据操作

 数据绑定：
  将数据绑定到视图上面，如果数据发生了修改，视图就会自动的更新
 数据绑定的实现方式：
  所有的指令和双花括号都有数据绑定的功能
 数据绑定背后的工作方式：
   object.defineProperty
	

1、双花括号语法(mustache/interpolation)

  语法:<any>{{expression}}</any>
  作用:将表达式执行的结果 输出到调用双花括号的innerHTML中
	
  练习 demo03_lianxi.html
  //stuList:[{},{}]
  在该文件中，通过Vue去初始化一个对象数组:学生数组（5个对象: score/sex/name）,将对象数组显示在table中

	①通过Vue中data去初始化数组
	②显示在table中

2、指令 directive
 指令：指定用来干一件事情
 Vue中的指令:扩展html功能

 程序的基本构成：顺序 选择 循环
 2.1 循环指令
   v-for
   语法1:
   <any v-for="tmp in list"></any>
   语法2:
   <any v-for="(tmp,index) in list"></any>	
   功能:
	根据要遍历的集合中元素的个数 动态创建多个调用该指令的标签

 2.2 选择指令
  选择指令是要根据表达式执行结果的真假 来决定这个元素是否要挂载到DOM
  v-if 语法:
   <any v-if='expression'></any>
  功能：根据expression表达式执行的结果 来决定any这个标签是否要挂载到DOM
  多重分支判断:
  v-if v-else-if v-else

  练习：
   demo07_lianxi.html
   v-for v-if来重构demo03_lianxi.html
   要求：只显示成绩在60分以上的同学

 2.3 事件绑定
  语法：
  <any v-on:event="handleEvent"></any>
  <any @event="handleEvent"></any>
  功能：
  给指定的标签 绑定对应的事件以及对应的处理函数

  练习：demo09_lianxi.html
  初始化一个数组，[100,200,300]
  将数组显示在无序列表，在列表的下边有一个按钮，点击按钮时，向列表的尾部追加一个随机的100以内的随机数

  //数据--》展示--》特定的行为
 
 2.4 属性绑定
  将一个表达式执行的结果 绑定到一个属性，这就是属性绑定。
  2.4.1 基本语法:
   <any v-bind:myProp="expression">
   </any>
   缩写：
   <any :myProp="expression">
   </any>
   功能：将表达式执行的结果 绑定给		myProp的属性
	举例：
	<a v-bind:href="myUrl"></a>
  
  2.4.2 动态样式/样式类的绑定
   动态样式绑定：
	<any :style='{myStyle:expression}'>
	</any>
	 将表达式执行的结果绑定style的myStyle这个属性
	举例:
	<any :style='{width:myWidth}'></any>

   动态样式类绑定:
    <any :class="{myClass:expression}"></any>
    根据表达式执行结果的真假 来决定是否要将myClass添加到当前元素

 2.5 双向数据绑定指令
  方向1绑定:将数据 绑定到 视图
  方向2绑定：将视图中常见表单元素用户操作的结果 绑定到 数据

  语法:
  <input/select/textarea v-model="uname"/>
  功能：双向数据绑定，将uname绑定到视图，同时将视图中用户操作的结果绑定uname
  支持修饰符的。

  练习:demo13_lianxi.html
  复选框/button
  功能：勾选复选框,button可以点击，否则button无法点击
  提示：
   ①双向数据绑定
   ②将复选框操作的结果绑定给button的disabled属性 （属性绑定）

 2.6 其它常用指令
    改变display决定显示 隐藏
    <p v-show="isMember">{{msg}}
    </p>
    更新元素的innerHTML
    <div v-html="myHeader"> it is a container </div>
    更新内容
    <div v-text="myHeader"> it is a container </div>


每日一练:
  实现一个分页条，支持点击某一页，动态添加样式类
  步骤：
  ①在data准备一个页码数组
  [1,2,3,4,5]
  ②将数组通过指令循环的显示在button
  ③点击button，动态添加样式到按钮

	






